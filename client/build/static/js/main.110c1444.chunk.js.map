{"version":3,"sources":["components/PlayerInfo.js","components/MatchInfo.js","App.js","index.js"],"names":["PlayerInfo","playerData","index","sec","Math","floor","duration","slice","className","undefined","language","name","MatchInfo","obj","match","matchData","started","Object","keys","length","noPlayers","tops","players","filter","player","finished","sort","a","b","rank","mode","map","App","chName","useRef","useState","setMatchData","JSON","parse","window","localStorage","getItem","prevData","setPrevData","timer","fetchData","current","fetch","then","res","json","data","status","currData","matchId","p","some","m","winner","r","setItem","stringify","useEffect","location","pathname","split","trim","setInterval","clearInterval","id","style","marginBottom","fontSize","fontWeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAyBeA,MAvBf,YAA4C,IAAtBC,EAAqB,EAArBA,WAAYC,EAAS,EAATA,MACxBC,EAAMC,KAAKC,MAAMJ,EAAWK,SAAW,KACvCA,EAAQ,WAAO,KAAOF,KAAKC,MAAMF,EAAM,KAAKI,OAAO,GAA3C,cACV,KAAOH,KAAKC,MAAMF,EAAM,KAC1BI,OAAO,GAFK,KAGd,OACI,sBACIC,UACI,qBACWC,IAAVP,EACKA,EAAQ,IAAM,EACV,QACA,OACJ,IAPd,UAUI,8BAAMD,EAAWS,WACjB,8BAAMT,EAAWU,OACjB,8BAAML,QC2BHM,MAtCf,YAA0C,IAJzBC,EAIeC,EAAS,EAApBC,UACjB,IAAKD,EAAME,QACP,OACI,sBAAKR,UAAU,oBAAf,UACI,8BARCK,EASaC,EARS,IAA5BG,OAAOC,KAAKL,GAAKM,OASF,sBACA,uBAEV,yCACY,sBAAMX,UAAU,YAAhB,SAA6BM,EAAMM,kBAK3D,IAAMC,EAAOP,EAAMQ,QACdC,QAAO,SAACC,GAAD,OAAYA,EAAOC,YAC1BC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAOD,EAAEC,QAC1BtB,MAAM,EAxBH,GAyBR,OACI,sBAAKC,UAAU,aAAf,UACI,uCAAUM,EAAMgB,QACC,IAAhBT,EAAKF,QAAgB,8CACrBE,EAAKU,KAAI,SAACP,EAAQtB,GAAT,OACN,cAAC,EAAD,CAEID,WAAYuB,EACZtB,MAAOA,GAFFsB,EAAOb,SAKpB,yCAEI,sBAAMH,UAAU,YAAhB,SAA6BM,EAAMM,mB,MCwEpCY,MA5Gf,WACI,IAAMC,EAASC,iBAAO,IADX,EAEuBC,mBAAS,IAFhC,mBAEJpB,EAFI,KAEOqB,EAFP,OAKqBD,mBAC5BE,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,cAAgB,IANhD,mBAKJC,EALI,KAKMC,EALN,KASLC,EAAQV,iBAAO,MAEfW,EAAY,WAES,KAAnBZ,EAAOa,SAGXC,MAAM,QAAD,OAASd,EAAOa,UAChBE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAEiB,MAAhBA,EAAKC,QAGThB,GAAa,SAACiB,GAgCV,OA7BIA,EAASC,UAAYH,EAAKG,SAEtBD,GAAYA,EAASrC,SACrB2B,GAAY,SAACY,GACT,GACIA,EAAEC,MACE,SAACC,GAAD,OAAOA,EAAEH,UAAYD,EAASC,WAGlC,OAAOC,EACX,IAAMG,EAASL,EAAS/B,QACnBC,QAAO,SAACC,GAAD,OAAYA,EAAOC,YAC1BC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAOD,EAAEC,QAAM,GAC/B8B,EAAC,CACH,CACIL,QAASD,EAASC,QAClBxB,KAAMuB,EAASvB,KACf4B,OAAQA,IAJT,mBAMAH,IAMP,OAJAhB,OAAOC,aAAaoB,QAChB,WACAvB,KAAKwB,UAAUF,IAEZA,KAIZR,SAqBvB,OAhBAW,qBAAU,WAUN,OATAf,MAAM,UACNd,EAAOa,QAAUP,OAAOwB,SAASC,SAC5BC,MAAM,KACN1D,OAAO,GAAG,GACV2D,OACLrB,IACAD,EAAME,QAAUqB,aAAY,kBAAMtB,MAAa,KAGxC,WACHuB,cAAcxB,EAAME,SACpBF,EAAME,QAAU,QAErB,IAGC,sBAAKtC,UAAU,MAAf,UACK,6BAAKyB,EAAOa,SAAW,8BACvBb,EAAOa,SACJ,sBAAKuB,GAAG,OAAR,UACI,cAAC,EAAD,CAAWtD,UAAWA,IACtB,sBAAKuD,MAAO,CAAEC,aAAc,GAA5B,UAII,sBACID,MAAO,CAAEE,SAAU,OAAQC,WAAY,UAD3C,qBAJJ,OAWA,qBAAKJ,GAAG,iBAAR,SACK3B,EAASX,KAAI,SAACoB,GAAD,OACV,cAAC,EAAD,CAEIlD,WAAYkD,EAAKO,OACjB3C,UAAWoC,GAFNA,EAAKG,qBChG1CoB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.110c1444.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction PlayerInfo({ playerData, index }) {\r\n    const sec = Math.floor(playerData.duration / 1000);\r\n    const duration = `${(\"00\" + Math.floor(sec / 60)).slice(-2)}m:${(\r\n        \"00\" + Math.floor(sec % 60)\r\n    ).slice(-2)}s`;\r\n    return (\r\n        <div\r\n            className={\r\n                \"player-info \" +\r\n                (index !== undefined\r\n                    ? index % 2 === 0\r\n                        ? \"light\"\r\n                        : \"dark\"\r\n                    : \"\")\r\n            }\r\n        >\r\n            <div>{playerData.language}</div>\r\n            <div>{playerData.name}</div>\r\n            <div>{duration}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayerInfo;\r\n","import React from \"react\";\r\nimport PlayerInfo from \"./PlayerInfo\";\r\n\r\nconst TOP = 2;\r\n\r\nfunction isEmpty(obj) {\r\n    return Object.keys(obj).length === 0;\r\n}\r\n\r\nfunction MatchInfo({ matchData: match }) {\r\n    if (!match.started) {\r\n        return (\r\n            <div className=\"waiting-container\">\r\n                <h2>\r\n                    {!isEmpty(match)\r\n                        ? \"Waiting for Players\"\r\n                        : \"No Match Found!!!\"}\r\n                </h2>\r\n                <p>\r\n                    Players:<span className=\"no-player\">{match.noPlayers}</span>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n    const tops = match.players\r\n        .filter((player) => player.finished)\r\n        .sort((a, b) => a.rank - b.rank)\r\n        .slice(0, TOP);\r\n    return (\r\n        <div className=\"match-info\">\r\n            <h2>Mode:{match.mode}</h2>\r\n            {tops.length === 0 && <h2>Clashining..</h2>}\r\n            {tops.map((player, index) => (\r\n                <PlayerInfo\r\n                    key={player.name}\r\n                    playerData={player}\r\n                    index={index}\r\n                />\r\n            ))}\r\n            <p>\r\n                Players:\r\n                <span className=\"no-player\">{match.noPlayers}</span>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MatchInfo;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport MatchInfo from \"./components/MatchInfo\";\nimport PlayerInfo from \"./components/PlayerInfo\";\nimport \"./App.css\";\n\nfunction App() {\n    const chName = useRef(\"\"); //Holds Channle Name\n    const [matchData, setMatchData] = useState({}); //Holds Current Match Data\n\n    //Hold PrevData Initilized by getting `prevData` from localStorage\n    const [prevData, setPrevData] = useState(\n        JSON.parse(window.localStorage.getItem(\"prevData\")) || []\n    );\n    //Timer for setIntervals\n    const timer = useRef(null);\n\n    const fetchData = () => {\n        //If Channle Name is Not there return\n        if (chName.current === \"\") return;\n\n        //get Report related to Channle Name\n        fetch(`/api/${chName.current}`)\n            .then((res) => res.json())\n            .then((data) => {\n                //If got error in report return\n                if (data.status !== 200) return;\n\n                //Set matchData to currentely feteched data\n                setMatchData((currData) => {\n                    //Check if Different match\n                    // i.e. new lobby\n                    if (currData.matchId !== data.matchId) {\n                        //If current lobby was started then put it in PrevData and Save to localStorae\n                        if (currData && currData.started) {\n                            setPrevData((p) => {\n                                if (\n                                    p.some(\n                                        (m) => m.matchId === currData.matchId\n                                    )\n                                )\n                                    return p;\n                                const winner = currData.players\n                                    .filter((player) => player.finished)\n                                    .sort((a, b) => a.rank - b.rank)[0];\n                                const r = [\n                                    {\n                                        matchId: currData.matchId,\n                                        mode: currData.mode,\n                                        winner: winner,\n                                    },\n                                    ...p,\n                                ];\n                                window.localStorage.setItem(\n                                    \"prevData\",\n                                    JSON.stringify(r)\n                                );\n                                return r;\n                            });\n                        }\n                    }\n                    return data;\n                });\n            });\n    };\n\n    useEffect(() => {\n        fetch(\"/start\");\n        chName.current = window.location.pathname\n            .split(\"/\")\n            .slice(-1)[0]\n            .trim();\n        fetchData();\n        timer.current = setInterval(() => fetchData(), 5000);\n\n        //Cleanup code for timer\n        return () => {\n            clearInterval(timer.current);\n            timer.current = null;\n        };\n    }, []);\n\n    return (\n        <div className=\"App\">\n            {<h1>{chName.current || \"GOTO : /web/<ChannleName>\"}</h1>}\n            {chName.current && (\n                <div id=\"main\">\n                    <MatchInfo matchData={matchData} />\n                    <div style={{ marginBottom: 5 }}>\n                        {\n                            //Previous</br>\n                        }\n                        <span\n                            style={{ fontSize: \"20px\", fontWeight: \"bolder\" }}\n                        >\n                            Winners\n                        </span>\n                        :\n                    </div>\n                    <div id=\"prev-container\">\n                        {prevData.map((data) => (\n                            <PlayerInfo\n                                key={data.matchId}\n                                playerData={data.winner}\n                                matchData={data}\n                            />\n                        ))}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}