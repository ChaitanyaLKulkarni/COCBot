{"version":3,"sources":["components/PlayerInfo.js","components/MatchInfo.js","App.js","index.js"],"names":["PlayerInfo","playerData","sec","Math","floor","duration","slice","className","language","name","MatchInfo","match","matchData","started","noPlayers","tops","players","filter","player","finished","sort","a","b","rank","mode","map","length","App","chName","useRef","window","location","pathname","split","useState","setMatchData","JSON","parse","localStorage","getItem","prevData","setPrevData","timer","fetchData","current","fetch","then","res","json","data","status","currData","matchId","p","some","m","winner","r","setItem","stringify","useEffect","setInterval","clearInterval","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAgBeA,MAdf,YAAqC,IAAfC,EAAc,EAAdA,WACZC,EAAMC,KAAKC,MAAMH,EAAWI,SAAW,KACvCA,EAAQ,WAAO,KAAOF,KAAKC,MAAMF,EAAM,KAAKI,OAAO,GAA3C,cACV,KAAOH,KAAKC,MAAMF,EAAM,KAC1BI,OAAO,GAFK,KAGd,OACI,sBAAKC,UAAU,cAAf,UACI,8BAAMN,EAAWO,WACjB,8BAAMP,EAAWQ,OACjB,8BAAMJ,QCmBHK,MAzBf,YAA0C,IAAVC,EAAS,EAApBC,UACjB,IAAKD,EAAME,QACP,OACI,sBAAKN,UAAU,oBAAf,UACI,qDACA,iDAAoBI,EAAMG,gBAItC,IAAMC,EAAOJ,EAAMK,QACdC,QAAO,SAACC,GAAD,OAAYA,EAAOC,YAC1BC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAOD,EAAEC,QAC1BjB,MAAM,EAdH,GAeR,OACI,sBAAKC,UAAU,aAAf,UACI,uCAAUI,EAAMa,QAChB,iDAAoBb,EAAMG,aACzBC,EAAKU,KAAI,SAACP,GAAD,OACN,cAAC,EAAD,CAA8BjB,WAAYiB,GAAzBA,EAAOT,SAEX,IAAhBM,EAAKW,QAAgB,kD,MC0EnBC,MA9Ff,WACI,IAAMC,EAASC,iBAAOC,OAAOC,SAASC,SAASC,MAAM,KAAK3B,OAAO,GAAG,IADzD,EAEuB4B,mBAAS,IAFhC,mBAEJtB,EAFI,KAEOuB,EAFP,OAKqBD,mBAC5BE,KAAKC,MAAMP,OAAOQ,aAAaC,QAAQ,cAAgB,IANhD,mBAKJC,EALI,KAKMC,EALN,KASLC,EAAQb,iBAAO,MAEfc,EAAY,WAETf,EAAOgB,SAGZC,MAAM,QAAD,OAASjB,EAAOgB,UAChBE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAEiB,MAAhBA,EAAKC,QAGTf,GAAa,SAACgB,GAgCV,OA7BIA,EAASC,UAAYH,EAAKG,SAEtBD,GAAYA,EAAStC,SACrB4B,GAAY,SAACY,GACT,GACIA,EAAEC,MACE,SAACC,GAAD,OAAOA,EAAEH,UAAYD,EAASC,WAGlC,OAAOC,EACX,IAAMG,EAASL,EAASnC,QACnBC,QAAO,SAACC,GAAD,OAAYA,EAAOC,YAC1BC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAOD,EAAEC,QAAM,GAC/BkC,EAAC,CACH,CACIL,QAASD,EAASC,QAClB5B,KAAM2B,EAAS3B,KACfgC,OAAQA,IAJT,mBAMAH,IAMP,OAJAvB,OAAOQ,aAAaoB,QAChB,WACAtB,KAAKuB,UAAUF,IAEZA,KAIZR,SAiBvB,OAZAW,qBAAU,WAMN,OALAjB,IACAD,EAAME,QAAUiB,aAAY,kBAAMlB,MAAa,KAC/CE,MAAM,UAGC,WACHiB,cAAcpB,EAAME,SACpBF,EAAME,QAAU,QAErB,IAGC,sBAAKrC,UAAU,MAAf,UACI,6BAAKqB,EAAOgB,SAAW,8BACtBhB,EAAOgB,SACJ,sBAAKmB,GAAG,OAAR,UACI,cAAC,EAAD,CAAWnD,UAAWA,IACtB,sBAAKmD,GAAG,iBAAR,8BAEKvB,EAASf,KAAI,SAACwB,GAAD,OACV,cAAC,EAAD,CAEIhD,WAAYgD,EAAKO,OACjB5C,UAAWqC,GAFNA,EAAKG,sBClF1CY,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.b970bbe2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction PlayerInfo({ playerData }) {\r\n    const sec = Math.floor(playerData.duration / 1000);\r\n    const duration = `${(\"00\" + Math.floor(sec / 60)).slice(-2)}m:${(\r\n        \"00\" + Math.floor(sec % 60)\r\n    ).slice(-2)}s`;\r\n    return (\r\n        <div className=\"player-info\">\r\n            <div>{playerData.language}</div>\r\n            <div>{playerData.name}</div>\r\n            <div>{duration}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayerInfo;\r\n","import React from \"react\";\r\nimport PlayerInfo from \"./PlayerInfo\";\r\n\r\nconst TOP = 2;\r\n\r\nfunction MatchInfo({ matchData: match }) {\r\n    if (!match.started) {\r\n        return (\r\n            <div className=\"waiting-container\">\r\n                <h2>Waiting for Players</h2>\r\n                <p>Current Players:{match.noPlayers}</p>\r\n            </div>\r\n        );\r\n    }\r\n    const tops = match.players\r\n        .filter((player) => player.finished)\r\n        .sort((a, b) => a.rank - b.rank)\r\n        .slice(0, TOP);\r\n    return (\r\n        <div className=\"match-info\">\r\n            <h2>Mode:{match.mode}</h2>\r\n            <p>Current Players:{match.noPlayers}</p>\r\n            {tops.map((player) => (\r\n                <PlayerInfo key={player.name} playerData={player} />\r\n            ))}\r\n            {tops.length === 0 && <h2>Clashining..</h2>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MatchInfo;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport MatchInfo from \"./components/MatchInfo\";\nimport PlayerInfo from \"./components/PlayerInfo\";\nimport \"./App.css\";\n\nfunction App() {\n    const chName = useRef(window.location.pathname.split(\"/\").slice(-1)[0]); //Holds Channle Name\n    const [matchData, setMatchData] = useState({}); //Holds Current Match Data\n\n    //Hold PrevData Initilized by getting `prevData` from localStorage\n    const [prevData, setPrevData] = useState(\n        JSON.parse(window.localStorage.getItem(\"prevData\")) || []\n    );\n    //Timer for setIntervals\n    const timer = useRef(null);\n\n    const fetchData = () => {\n        //If Channle Name is Not there return\n        if (!chName.current) return;\n\n        //get Report related to Channle Name\n        fetch(`/api/${chName.current}`)\n            .then((res) => res.json())\n            .then((data) => {\n                //If got error in report return\n                if (data.status !== 200) return;\n\n                //Set matchData to currentely feteched data\n                setMatchData((currData) => {\n                    //Check if Different match\n                    // i.e. new lobby\n                    if (currData.matchId !== data.matchId) {\n                        //If current lobby was started then put it in PrevData and Save to localStorae\n                        if (currData && currData.started) {\n                            setPrevData((p) => {\n                                if (\n                                    p.some(\n                                        (m) => m.matchId === currData.matchId\n                                    )\n                                )\n                                    return p;\n                                const winner = currData.players\n                                    .filter((player) => player.finished)\n                                    .sort((a, b) => a.rank - b.rank)[0];\n                                const r = [\n                                    {\n                                        matchId: currData.matchId,\n                                        mode: currData.mode,\n                                        winner: winner,\n                                    },\n                                    ...p,\n                                ];\n                                window.localStorage.setItem(\n                                    \"prevData\",\n                                    JSON.stringify(r)\n                                );\n                                return r;\n                            });\n                        }\n                    }\n                    return data;\n                });\n            });\n    };\n\n    useEffect(() => {\n        fetchData();\n        timer.current = setInterval(() => fetchData(), 5000);\n        fetch(\"/start\");\n\n        //Cleanup code for timer\n        return () => {\n            clearInterval(timer.current);\n            timer.current = null;\n        };\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <h1>{chName.current || \"GOTO : /web/<ChannleName>\"}</h1>\n            {chName.current && (\n                <div id=\"main\">\n                    <MatchInfo matchData={matchData} />\n                    <div id=\"prev-container\">\n                        Previous Winners:\n                        {prevData.map((data) => (\n                            <PlayerInfo\n                                key={data.matchId}\n                                playerData={data.winner}\n                                matchData={data}\n                            />\n                        ))}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}